server:
    port: 8083
    max-http-header-size: 10MB
spring:
    application:
        name: job-scheduler-service
## ideally sensitive information should come from Key Vault or AWS Secrets Manager
postgresSchema: jobschedulerservice
postgresConnectionString: jdbc:postgresql://localhost:5432/postgres?currentSchema=${postgresSchema}
postgresUsername: postgres
postgresPassword: admin

---
spring:
    datasource:
        url: ${postgresConnectionString}
        username: ${postgresUsername}
        password: ${postgresPassword}
        driver-class-name: org.postgresql.Driver
        hikari:
            auto-commit: false
            schema: ${postgresSchema}
            poolName: HikariPool-1
            maximum-pool-size: 10
            minimum-idle: 10
            idle-timeout: 600000
            max-lifetime: 1800000
            connection-timeout: 30000
    jpa:
        properties:
            jadira:
                usertype:
                    autoRegisterUserTypes: true
            hibernate:
                default_schema: ${postgresSchema}
                order_inserts: true
                jdbc:
                    batch_size: 10
                hbm2ddl:
                    auto: none
                show_sql: true
    liquibase:
        enabled: true
        contexts: dev
        change-log: classpath:db/changelog/db.changelog-master.yaml
        default-schema: ${postgresSchema}
        parameters:
            db_schema: ${postgresSchema}
jwt:
    secretKey: dGhpcyBpcyBhIHNlY3VyZSBkZWNpc2lvbiBrZXkgdGhhdCBpcyBzZWN1cmU=
    expiration: 3600000

scheduler:
    fixedRate: 600000
    initialDelay: 300000
    lock:
        expiryTimeInMinutes: 30


logging:
    pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg [jobId:%X{jobId} jobName:%X{jobName}]"


